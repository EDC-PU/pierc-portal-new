
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN_FACULTY';
    }

    // By default, deny all access.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User profiles can be read by anyone authenticated, but only updated by the owner or an admin.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // For new sign-ups
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      allow delete: if (request.auth != null && request.auth.uid == userId) || isAdmin();
    }

    // Announcements can be read by anyone authenticated. Managed by admins.
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    // Events can be read by anyone authenticated. Managed by admins.
    match /events/{eventId} {
      allow read: if request.auth != null;
      // RSVP is an update action
      allow update: if request.auth != null; 
      allow create, delete: if isAdmin();
    }
    
    // Ideas can be created/updated by the owner. Read by team/admins.
    match /ideas/{ideaId} {
      // Admins and idea owners/team members can read.
      allow read: if isAdmin() || (request.auth != null && (resource.data.userId == request.auth.uid || request.auth.token.email in resource.data.teamMemberEmails));
      // Only idea owner can update their idea
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      // Anyone authenticated can submit a new idea.
      allow create: if request.auth != null;
    }
    
    // System Settings are read-only for clients, managed by admins.
    match /systemSettings/config {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Cohorts are read-only for clients, managed by admins.
    match /cohorts/{cohortId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }
    
    // Notifications are user-specific.
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Created by backend/admin functions, not directly by clients usually.
      allow create: if isAdmin(); 
    }
    
    // Activity logs are admin-readable, created by the system/user actions.
     match /activityLogs/{logId} {
        allow read: if isAdmin();
        // Created by backend/user actions, not directly by clients usually.
        allow create: if request.auth != null; 
     }
  }
}
