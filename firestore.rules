rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN_FACULTY';
    }

    function isIdeaOwner(ideaId) {
      return request.auth.uid == get(/databases/$(database)/documents/ideas/$(ideaId)).data.userId;
    }
    
    function isTeamMember(ideaId) {
      let idea = get(/databases/$(database)/documents/ideas/$(ideaId)).data;
      return request.auth.uid in idea.teamMemberUids;
    }

    // --- Users Collection ---
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
    }
    
    // --- Ideas Collection ---
    match /ideas/{ideaId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && (isIdeaOwner(ideaId) || isTeamMember(ideaId) || isAdmin());
    }
    
    // --- Announcements Collection ---
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // --- Events Collection ---
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow update: if request.auth != null && (
                      (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rsvps', 'rsvpCount', 'updatedAt'])) ||
                      isAdmin()
                    );
      allow create, delete: if isAdmin();
    }
    
    // --- Cohorts Collection ---
    match /cohorts/{cohortId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // --- System Settings Collection ---
    match /systemSettings/{settingsId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Notifications Collection ---
    match /notifications/{notificationId} {
      // Users can manage their own notifications
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      // Any authenticated user can create notifications (for cross-user notifications like comments)
      allow create: if request.auth != null;
    }
    
    // --- Activity Logs Collection ---
    match /activityLogs/{logId} {
        // Only Admins can read logs
        allow read: if isAdmin();
        
        // Any authenticated user can create a log entry for their own actions.
        allow create: if request.auth != null && request.resource.data.actorUid == request.auth.uid;
        
        // Logs are immutable
        allow update, delete: if false;
    }
  }
}
