
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdmin() {
      return isSignedIn() && getUserRole(request.auth.uid) == 'ADMIN_FACULTY';
    }

    function getIdea(ideaId) {
      return get(/databases/$(database)/documents/ideas/$(ideaId)).data;
    }
    
    function isIdeaOwner(ideaId) {
      return isUser(getIdea(ideaId).userId);
    }
    
    function isTeamMember(ideaId) {
      // teamMemberUids contains an array of UIDs for the team members.
      return isSignedIn() && request.auth.uid in getIdea(ideaId).teamMemberUids;
    }

    // --- File Access Rules ---

    // Publicly readable files like event flyers and announcement attachments.
    // Write access is restricted to admins.
    match /event_flyers/{fileName} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /announcement_attachments/{fileName} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User-specific idea documents.
    // These files are publicly readable via their URL once uploaded, which is necessary
    // for the current application design. For stricter privacy, this read rule could be
    // changed to `if isIdeaOwner(ideaId) || isTeamMember(ideaId) || isAdmin()`, but that
    // would require changing the application to use temporary download URLs instead of public URLs.
    match /incubation_documents/{ideaId}/{fileName} {
      allow read: if true;
      allow write: if isIdeaOwner(ideaId) || isTeamMember(ideaId) || isAdmin();
    }

    match /presentations/{ideaId}/{fileName} {
      allow read: if true;
      // Only the idea owner (leader) or an admin can upload the main presentation.
      allow write: if isIdeaOwner(ideaId) || isAdmin();
    }

    match /yukti_screenshots/{ideaId}/{fileName} {
      allow read: if true;
      // Only the idea owner (leader) or an admin can upload the Yukti screenshot.
      allow write: if isIdeaOwner(ideaId) || isAdmin();
    }
  }
}
